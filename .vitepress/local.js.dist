/* This file allows configuration overrides of various core settings. */

// Allows custom mapping of data sources.
// It is used by the VitePress data loaders to determine what data to
// load for export.
//
// By default, all data files are loaded from "../data" directory
// (paths are relative to "<base>/lib").
//
// Keys are data identifiers, Values are location RELATIVE TO
// * "<base>/lib" DIRECTORY.
export const data_paths = {
	// doveadm: '../data/doveadm.js',
}

// A listing of source files (.md) for the documentation.
// Paths are relative to project base.
//
// Supports fast-glob: https://github.com/mrmlnc/fast-glob#pattern-syntax
//
// Default: [ 'docs/**/*.md' ]
export const source_paths = []

// A listing of files to watch to refresh data loaders in dev mode.
// See: https://vitepress.dev/guide/data-loading#data-from-local-files
// Paths are relative to project base.
//
// Supports fast-glob: https://github.com/mrmlnc/fast-glob#pattern-syntax
//
// Default: [ 'docs/**/*.md', 'docs/**/*.inc', 'data/**/*' ]
export const watch_paths = []

// A listing of source path translations.
//
// This is the same format as VitePress' 'rewrite' setting:
//   https://vitepress.dev/reference/site-config#rewrites
//
// Default: { 'docs/:path(.*)': ':path' }
export const source_path_translations = {}

// A listing of paths containing man files.
// Paths are relative to project base.
//
// Supports fast-glob: https://github.com/mrmlnc/fast-glob#pattern-syntax
//
// Default: [ 'docs/core/man/*.[[:digit:]].md' ]
export const man_paths = []

// A listing of paths containing plugin files.
// Paths are relative to project base.
//
// Supports fast-glob: https://github.com/mrmlnc/fast-glob#pattern-syntax
//
// Default: [ 'docs/core/plugins/*.md' ]
export const plugin_paths = []

// Enable additional labels to support in Dovecot-specific markdown
// processing (i.e. [[xyz,...]]).
export const markdown_extend = {

	// Init function. Return value is configuration options to add to markdown
	// object.
	// init: () => { return {} },

	// Opening tag function. Returns opening tag.
	// open: (mode, parts, opts, env) => { return '' },

	// Body function. Returns body text.
	// body: (mode, env) => { return '' },

	// Close tag function. Returns closing tag.
	// close: (mode, env) => { return '' },

}
